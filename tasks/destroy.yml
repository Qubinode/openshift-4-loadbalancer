---
- name: check status of container
  include: check_status.yml

- name: Stop and disable {{ lb_name }}.service
  systemd:
    name: "{{ lb_name }}.service"
    enabled: false
    state: stopped
  ignore_errors: true
  when: container_running|bool

- name: check status of container
  include: check_status.yml

- name: remove systemd service for {{ lb_name }}a
  block:
    - name: check for the {{ lb_name }}.service file
      stat:
        path: "{{ lb_name }}"
      register: systemd_file

    - name: remove the {{ lb_name }}.service file
      file:
        path: "/etc/systemd/system/{{ lb_name }}.service"
        state: absent
      register: remove_service

    - name: reload and reset systemd
      shell: >
        systemctl daemon-reload
        systemctl reset-failed
      ignore_errors: yes
      when: remove_service.changed
  when: not container_running|bool

- name: get uuid for {{ lb_name }} container
  shell: podman ps -a | awk '/{{ lb_name }}/ {print $1}'
  register: container_uuid
  ignore_errors: yes

- name: ensure the {{ lb_name }} container is removed
  command: podman container rm --force --volumes {{ container_uuid.stdout }}
  ignore_errors: yes
  register: remove_container_result
  when: container_exist|bool

- name: check status of container
  include: check_status.yml

- fail:
    msg: "Unable to delete {{ lb_name }} please remove it before re-running"
  when: container_exist|bool
